#!/bin/bash
set -e

# Redmine
REDMINE_DB_NAME=${REDMINE_DB_NAME:-}
REDMINE_DB_USER=${REDMINE_DB_USER:-}
REDMINE_DB_PASS=${REDMINE_DB_PASS:-}

# Gerrit
GERRIT_DB_NAME=${GERRIT_DB_NAME:-}
GERRIT_DB_USER=${GERRIT_DB_USER:-}
GERRIT_DB_PASS=${GERRIT_DB_PASS:-}

# Gitlab
GITLAB_DB_NAME=${GITLAB_DB_NAME:-}
GITLAB_DB_USER=${GITLAB_DB_USER:-}
GITLAB_DB_PASS=${GITLAB_DB_PASS:-}

# Trac
TRAC_DB_NAME=${TRAC_DB_NAME:-}
TRAC_DB_USER=${TRAC_DB_USER:-}
TRAC_DB_PASS=${TRAC_DB_PASS:-}


# disable error log
sed 's/^log_error/# log_error/' -i /etc/mysql/my.cnf

# listen on all interfaces
cat > /etc/mysql/conf.d/mysql-listen.cnf <<EOF
[mysqld]
bind = 0.0.0.0
EOF

# Fixing StartUp Porblems with some DNS Situations and Speeds up the stuff
# http://www.percona.com/blog/2008/05/31/dns-achilles-heel-mysql-installation/
cat > /etc/mysql/conf.d/mysql-skip-name-resolv.cnf <<EOF
[mysqld]
skip_name_resolve
EOF

# fix permissions and ownership of /var/lib/mysql
mkdir -p -m 700 /var/lib/mysql
chown -R mysql:mysql /var/lib/mysql

# fix permissions and ownership of /run/mysqld
mkdir -p -m 0755 /run/mysqld
chown -R mysql:root /run/mysqld

#
# the default password for the debian-sys-maint user is randomly generated
# during the installation of the mysql-server package.
#
# Due to the nature of docker we blank out the password such that the maintenance
# user can login without a password.
#
sed 's/password = .*/password = /g' -i /etc/mysql/debian.cnf

# initialize MySQL data directory
if [ ! -d /var/lib/mysql/mysql ]; then
  echo "Installing database..."

  mysql_install_db --user=mysql >/dev/null 2>&1

  # start mysql server
  echo "Starting MySQL server..."
  /usr/bin/mysqld_safe >/dev/null 2>&1 &

  # wait for mysql server to start (max 30 seconds)
  timeout=30
  while ! /usr/bin/mysqladmin -u root status >/dev/null 2>&1
  do
    timeout=$(($timeout - 1))
    if [ $timeout -eq 0 ]; then
      echo "Could not connect to mysql server. Aborting..."
      exit 1
    fi
    echo "Waiting for database server to accept connections..."
    sleep 1
  done

  ## create a localhost only, debian-sys-maint user
  ## the debian-sys-maint is used while creating users and database
  ## as well as to shut down or starting up the mysql server via mysqladmin
  echo "Creating debian-sys-maint user..."
  mysql -uroot -e "GRANT ALL PRIVILEGES on *.* TO 'debian-sys-maint'@'localhost' IDENTIFIED BY '' WITH GRANT OPTION;"

  /usr/bin/mysqladmin --defaults-file=/etc/mysql/debian.cnf shutdown
fi

# create new redmine user / database
if [ -n "${REDMINE_DB_USER}" -o -n "${REDMINE_DB_NAME}" ]; then
  /usr/bin/mysqld_safe >/dev/null 2>&1 &

  # wait for mysql server to start (max 30 seconds)
  timeout=30
  while ! /usr/bin/mysqladmin -u root status >/dev/null 2>&1
  do
    timeout=$(($timeout - 1))
    if [ $timeout -eq 0 ]; then
      echo "Could not connect to mysql server. Aborting..."
      exit 1
    fi
    sleep 1
  done

  if [ -n "${REDMINE_DB_NAME}" ]; then
    echo "Creating database \"${REDMINE_DB_NAME}\"..."
    mysql --defaults-file=/etc/mysql/debian.cnf \
      -e "CREATE DATABASE IF NOT EXISTS \`${REDMINE_DB_NAME}\` DEFAULT CHARACTER SET \`utf8\` COLLATE \`utf8_unicode_ci\`;"
    if [ -n "${REDMINE_DB_USER}" ]; then
      echo "Granting access to database \"${REDMINE_DB_NAME}\" for user \"${REDMINE_DB_USER}\"..."
      mysql --defaults-file=/etc/mysql/debian.cnf \
        -e "GRANT ALL PRIVILEGES ON \`${REDMINE_DB_NAME}\`.* TO '${REDMINE_DB_USER}' IDENTIFIED BY '${REDMINE_DB_PASS}';"
    fi
  fi
  /usr/bin/mysqladmin --defaults-file=/etc/mysql/debian.cnf shutdown
fi


# create new gerrit user / database
if [ -n "${GERRIT_DB_USER}" -o -n "${GERRIT_DB_NAME}" ]; then
  /usr/bin/mysqld_safe >/dev/null 2>&1 &

  # wait for mysql server to start (max 30 seconds)
  timeout=30
  while ! /usr/bin/mysqladmin -u root status >/dev/null 2>&1
  do
    timeout=$(($timeout - 1))
    if [ $timeout -eq 0 ]; then
      echo "Could not connect to mysql server. Aborting..."
      exit 1
    fi
    sleep 1
  done

  if [ -n "${GERRIT_DB_NAME}" ]; then
    echo "Creating database \"${GERRIT_DB_NAME}\"..."
    mysql --defaults-file=/etc/mysql/debian.cnf \
      -e "CREATE DATABASE IF NOT EXISTS \`${GERRIT_DB_NAME}\` DEFAULT CHARACTER SET \`utf8\` COLLATE \`utf8_unicode_ci\`;"
    if [ -n "${GERRIT_DB_USER}" ]; then
      echo "Granting access to database \"${GERRIT_DB_NAME}\" for user \"${GERRIT_DB_USER}\"..."
      mysql --defaults-file=/etc/mysql/debian.cnf \
        -e "GRANT ALL PRIVILEGES ON \`${GERRIT_DB_NAME}\`.* TO '${GERRIT_DB_USER}' IDENTIFIED BY '${GERRIT_DB_PASS}';"
    fi
  fi
  /usr/bin/mysqladmin --defaults-file=/etc/mysql/debian.cnf shutdown
fi

# create new gitlab user / database
if [ -n "${GITLAB_DB_USER}" -o -n "${GITLAB_DB_NAME}" ]; then
  /usr/bin/mysqld_safe >/dev/null 2>&1 &

  # wait for mysql server to start (max 30 seconds)
  timeout=30
  while ! /usr/bin/mysqladmin -u root status >/dev/null 2>&1
  do
    timeout=$(($timeout - 1))
    if [ $timeout -eq 0 ]; then
      echo "Could not connect to mysql server. Aborting..."
      exit 1
    fi
    sleep 1
  done

  if [ -n "${GITLAB_DB_NAME}" ]; then
    echo "Creating database \"${GITLAB_DB_NAME}\"..."
    mysql --defaults-file=/etc/mysql/debian.cnf \
      -e "CREATE DATABASE IF NOT EXISTS \`${GITLAB_DB_NAME}\` DEFAULT CHARACTER SET \`utf8\` COLLATE \`utf8_unicode_ci\`;"
    if [ -n "${GITLAB_DB_USER}" ]; then
      echo "Granting access to database \"${GITLAB_DB_NAME}\" for user \"${GITLAB_DB_USER}\"..."
      mysql --defaults-file=/etc/mysql/debian.cnf \
        -e "GRANT ALL PRIVILEGES ON \`${GITLAB_DB_NAME}\`.* TO '${GITLAB_DB_USER}' IDENTIFIED BY '${GITLAB_DB_PASS}';"
    fi
  fi
  /usr/bin/mysqladmin --defaults-file=/etc/mysql/debian.cnf shutdown
fi

# create new trac user / database
if [ -n "${TRAC_DB_USER}" -o -n "${TRAC_DB_NAME}" ]; then
  /usr/bin/mysqld_safe >/dev/null 2>&1 &

  # wait for mysql server to start (max 30 seconds)
  timeout=30
  while ! /usr/bin/mysqladmin -u root status >/dev/null 2>&1
  do
    timeout=$(($timeout - 1))
    if [ $timeout -eq 0 ]; then
      echo "Could not connect to mysql server. Aborting..."
      exit 1
    fi
    sleep 1
  done

  if [ -n "${TRAC_DB_NAME}" ]; then
    echo "Creating database \"${TRAC_DB_NAME}\"..."
    mysql --defaults-file=/etc/mysql/debian.cnf \
      -e "CREATE DATABASE IF NOT EXISTS \`${TRAC_DB_NAME}\` DEFAULT CHARACTER SET \`utf8\` COLLATE \`utf8_unicode_ci\`;"
    if [ -n "${TRAC_DB_USER}" ]; then
      echo "Granting access to database \"${TRAC_DB_NAME}\" for user \"${TRAC_DB_USER}\"..."
      mysql --defaults-file=/etc/mysql/debian.cnf \
        -e "GRANT ALL PRIVILEGES ON \`${TRAC_DB_NAME}\`.* TO '${TRAC_DB_USER}' IDENTIFIED BY '${TRAC_DB_PASS}';"
    fi
  fi
  /usr/bin/mysqladmin --defaults-file=/etc/mysql/debian.cnf shutdown
fi

exec /usr/bin/mysqld_safe
